[gd_resource type="VisualShader" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 2

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorUniform" id=4]
uniform_name = "shadow_color"

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, -10, -20 ) ]

[sub_resource type="VisualShaderNodeVec3Uniform" id=7]
uniform_name = "shadow_direction"

[resource]
code = "shader_type canvas_item;
uniform vec3 shadow_direction;
uniform vec4 shadow_color : hint_color;



void vertex() {
// Input:2
	vec3 n_out2p0 = vec3(VERTEX, 0.0);

// VectorUniform:4
	vec3 n_out4p0 = shadow_direction;

// VectorOp:3
	vec3 n_out3p0 = n_out2p0 + n_out4p0;

// Output:0
	VERTEX = n_out3p0.xy;

}

void fragment() {
// ColorUniform:6
	vec3 n_out6p0 = shadow_color.rgb;
	float n_out6p1 = shadow_color.a;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Input:2

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out4p0.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out6p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 123, -173 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 660, -80 )
nodes/vertex/2/node = SubResource( 5 )
nodes/vertex/2/position = Vector2( 260, -60 )
nodes/vertex/3/node = SubResource( 6 )
nodes/vertex/3/position = Vector2( 460, -60 )
nodes/vertex/4/node = SubResource( 7 )
nodes/vertex/4/position = Vector2( 240, 40 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 0, 0, 4, 0, 3, 1 )
nodes/fragment/0/position = Vector2( 760, -80 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 240, -100 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 460, -120 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 240, 20 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( 500, 80 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 2, 4, 0, 3, 0, 3, 1, 0, 1, 6, 0, 0, 0 )
